<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fdproject.mapper.RecipeMapper">

	<sql id="recipeColumns">
		<![CDATA[
		recipe_No,
		disease_Field,
		title,
		writer,
		food_Ingredients,
		step,
		img_File,
		reg_Date,
		hit,
		cart_Count,
		delete_Yn,
		storage,
		tip,
		RANDOM_IMG_FILE
		]]>
	</sql>

	<sql id="recipeColumns2">
		<![CDATA[
		r.recipe_No,
		r.disease_Field,
		r.title,
		r.writer,
		r.food_Ingredients,
		r.step,
		r.img_File,
		r.reg_Date,
		r.hit,
		r.cart_Count,
		r.delete_Yn,
		r.storage,
		r.tip,
		r.RANDOM_IMG_FILE
		]]>
	</sql>

	<sql id="deleteYN">
		<![CDATA[
		and delete_YN != 'Y'		
		]]>
	</sql>

	<sql id="r_deleteYN">
		<![CDATA[
		and r.delete_YN != 'Y'		
		]]>
	</sql>
	
	<sql id="commentColumns">
		<![CDATA[
			COMMENT_NO,
			RECIPE_NO, 
			WRITER, 
			CONTENT, 
			REF, 
			PARENT_NO,
			POS,
			DEPTH, 
			REG_DATE, 
			DELETE_YN,
			UPDATE_YN
		]]>
	</sql>
	
	<sql id="recipeRecommendedColumns">
		<![CDATA[
			RECIPE_RECOMMENDED_NO,
			RECIPE_NO,
			USER_ID
		]]>
	</sql>
	
	<resultMap id="comment" type="CommentDTO">
        <id property="commentNo" column="comment_no"/>
        <result property="recipeNo" column="recipe_no"/>
        <result property="writer" column="writer"/>
        <result property="content" column="content"/>
        <result property="ref" column="ref"/>
        <result property="parentNo" column="parent_no"/>
        <result property="pos" column="pos"/>
        <result property="depth" column="depth"/>
        <result property="regDate" column="reg_date"/>
        <result property="deleteYn" column="delete_yn"/>
        <result property="updateYn" column="update_yn"/>
	</resultMap>
	
	<resultMap id="recipeRecommended" type="RecipeRecommendedDTO">
        <id property="recipeRecommendedNo" column="recipe_recommended_no"/>
        <result property="recipeNo" column="recipe_no"/>
        <result property="userId" column="user_id"/>
	</resultMap>

	<!-- new -->
	<select id="selectRecipeList" resultType="RecipeDTO">
		<include refid="CommonMapper.pagingHeader" />
		SELECT
		<include refid="recipeColumns" />
		FROM
		recipes
		where
		1=1
		<include refid="CommonMapper.search_R" />
		<include refid="deleteYN" />
		order by title asc
		<include refid="CommonMapper.pagingFooter" />
	</select>

	<select id="selectWriterRecipeList" resultType="RecipeDTO"> <!-- 사용자 작성 -->
		<include refid="CommonMapper.pagingHeader" />
		SELECT
		<include refid="recipeColumns" />
		FROM
		recipes
		where
		1=1
		<include refid="deleteYN" />
		and writer != '[Manager]'
		<include refid="CommonMapper.search_R" />
		order by title asc
		<include refid="CommonMapper.pagingFooter" />
	</select>

	<select id="selectMyWriteRecipeList" resultType="RecipeDTO"> <!-- 본인이 작성한 -->
		<include refid="CommonMapper.pagingHeader" />
		SELECT
		<include refid="recipeColumns" />
		FROM
		recipes
		where
		1=1
		<include refid="deleteYN" />
		and writer =#{writer}
		<include refid="CommonMapper.search_R" />
		order by title asc
		<include refid="CommonMapper.pagingFooter" />
	</select>

	<select id="getMyRecipeList" parameterType="RecipeDTO"
		resultType="RecipeDTO">
		<include refid="CommonMapper.pagingHeader" />
		select
		c.recipe_CART_NO,
		<include refid="recipeColumns2" />
		from
		Recipes r, Recipes_cart c
		where r.recipe_NO = c.recipe_NO
		and c.USER_ID = #{cartDTO.userId}
		<include refid="r_deleteYN" />
		<include refid="CommonMapper.search_o" />
		order by title asc
		<include refid="CommonMapper.pagingFooter" />
	</select>
	<!-- 찜 레시피 리스트 -->
	<select id="selectMyRecipeTotalCount" parameterType="RecipeDTO"
		resultType="int">
		select
		COUNT(<![CDATA[*]]>)
		from Recipes_CART c, recipes r
		where
		c.recipe_NO = r.recipe_NO
		and USER_ID = #{cartDTO.userId}
		<include refid="deleteYN" />
		<include refid="CommonMapper.search_o" />
	</select>
	<!-- 유저들이 작성한 리스트 -->
	<select id="selectWriterRecipeTotalCount" parameterType="RecipeDTO"
		resultType="int">
        <![CDATA[ 
        	SELECT
	        COUNT(*)
	        FROM
	        recipes
	        where
	        1=1
	    ]]>
	    and writer != '[Manager]'
		<include refid="deleteYN" />
		<include refid="CommonMapper.search_R" />
	</select>  
	<!-- 내가 작성한 리스트 -->
	<select id="selectMyWriterRecipeTotalCount" parameterType="RecipeDTO"
		resultType="int">
        <![CDATA[ 
        	SELECT
	        COUNT(*)
	        FROM
	        recipes
	        where
	        1=1
	    ]]>
	    and writer=#{writer}
		<include refid="deleteYN" />
		<include refid="CommonMapper.search_R" />
	</select>
	<!-- 기본 레시피 리스트 -->
	<select id="selectRecipeTotalCount" parameterType="RecipeDTO"
		resultType="int">
        <![CDATA[ 
        	SELECT
	        COUNT(*)
	        FROM
	        recipes
	        where
	        1=1
	    ]]>
		<include refid="deleteYN" />
		<include refid="CommonMapper.search_R" />
	</select>

	<select id="selectRecipeInfo" parameterType="String"
		resultType="RecipeDTO">
		SELECT
		<include refid="recipeColumns" />
		FROM recipes
		WHERE Recipe_no = #{Recipe_no}
	</select>

	<select id="selectMyRecipe" parameterType="RecipesCartDTO"
		resultType="RecipesCartDTO">
		select
		*
		from
		recipes_cart rc
		where rc.recipe_no = #{recipeNo}
		and rc.user_id = #{userId}
	</select>

	<update id="UpdateUphit" parameterType="String">
		UPDATE recipes

		SET hit =
		hit + 1

		WHERE Recipe_no =
		#{Recipe_no}
	</update>


	<select id="myRecipeList" parameterType="String"
		resultType="RecipesCartDTO">
		select
		Recipe_CART_NO,
		Recipe_NO,
		USER_ID
		from
		Recipes_CART
		where
		USER_ID = #{userId}
	</select>

	<insert id="addCart" parameterType="RecipesCartDTO">
		<selectKey keyProperty="recipeCartNo" resultType="int"
			order="BEFORE">
			select SEQ_RECIPES_CART_NO.NEXTVAL from dual
		</selectKey>
		insert into RECIPES_CART (RECIPE_CART_NO, RECIPE_NO, USER_ID)
		values (#{recipeCartNo}, #{recipeNo}, #{userId})
	</insert>

	<delete id="deleteCart">
		delete
		from RECIPES_CART
		where RECIPE_NO = #{recipeNo}
	</delete>

	<update id="updateCartCount"
		parameterType="RecipesCartDTO">
		update recipes
		set Cart_Count = Cart_Count + 1
		where recipe_no = #{recipeNo}
	</update>

	<update id="minusCartCount"
		parameterType="RecipesCartDTO">
		update recipes
		set Cart_Count = Cart_Count - 1
		where recipe_no = #{recipeNo}
	</update>

	<select id="checkAuthority" parameterType="RecipesCartDTO"
		resultType="int">
		select count(*)
		from recipes_cart
		where recipe_no = #{recipeNo}
		and user_id = #{userId}
	</select>

	<insert id="uploadRecipe" parameterType="RecipeDTO">
		insert into recipes(recipe_no, title,
		writer,food_ingredients,step,reg_Date,cart_count,delete_yn,storage,tip,img_file,random_img_file)
		values(#{recipeNo},#{title},#{writer},#{foodIngredients},#{step},sysdate,#{cartCount},'N',#{storage},#{tip},#{imgFile},
		#{randomImgFile})
	</insert>

	<update id="modifyRecipe" parameterType="RecipeDTO">
		update recipes
		set title = #{title}, writer = #{writer}, food_ingredients =
		#{foodIngredients},
		step = #{step},reg_Date = sysdate, cart_count =
		#{cartCount},storage = #{storage},
		tip = #{tip}, img_file = #{imgFile}, random_img_file = #{randomImgFile}
		where recipe_no = #{recipeNo}
	</update>

	<select id="getRecipeNo" resultType="int">
		select max(r.recipe_no)
		from
		recipes r
	</select>

	<update id="deleteYNRecipe" parameterType="String">
		update recipes
		set delete_yn = 'Y'
		where recipe_no =#{recipeNo}
	</update>
	
	<select id="getCommentList" parameterType="int" resultMap="comment">
		SELECT <include refid="commentColumns" />
		FROM COMMENTS
		WHERE RECIPE_NO = #{recipeNo}
		AND DELETE_YN = 'N'
		ORDER BY REF, POS, DEPTH
	</select>
	
	<insert id="postComment" parameterType="commentDTO">
        <selectKey keyProperty="commentNo" resultType="int" order="BEFORE">
			SELECT SEQ_COMMENTS_NO.NEXTVAL FROM DUAL
        </selectKey>
		INSERT INTO COMMENTS (<include refid="commentColumns" />)
		VALUES(#{commentNo}, #{recipeNo}, #{writer}, #{content}, #{commentNo}, #{commentNo}, 1, 0, SYSDATE, 'N', 'N')
	</insert>
    
    <select id="getNextPos" parameterType="commentDTO" resultType="int">
    	<![CDATA[
		    SELECT (CASE WHEN cnt > 1 THEN (	SELECT POS
												FROM (
														SELECT ROWNUM rn, c.*
														FROM COMMENTS c
														WHERE PARENT_NO = #{parentNo}
														AND POS >= #{pos} AND DEPTH = #{depth} AND DELETE_YN = 'N'
										   		) WHERE rn = 2
										   )
		            	 ELSE 0
		       		END) AS nextPos
			FROM (SELECT COUNT(*) cnt FROM COMMENTS
				  WHERE PARENT_NO = #{parentNo} AND POS >= #{pos} AND DEPTH = #{depth} AND DELETE_YN = 'N')	 
		]]>
    </select> 
	
	<update id="deleteCommentBasic" parameterType="int">
        UPDATE COMMENTS
		SET DELETE_YN='Y'
		WHERE COMMENT_NO = #{commentNo} OR REF = #{commentNo} OR PARENT_NO = #{commentNo}
    </update>
    
    <update id="deleteCommentDetail" parameterType="map">
       	<![CDATA[
			UPDATE COMMENTS
			SET DELETE_YN='Y'
			WHERE POS >= #{minPos} AND POS < #{maxPos}
			AND REF = #{ref}
		]]>	
    </update>
	
	<update id="updateMinusPos" parameterType="map">
		UPDATE COMMENTS
		SET POS = POS-#{deletedCnt}
		WHERE POS > #{pos}
		AND REF = #{ref}
		AND DELETE_YN='N'
    </update>
    
    <update id="deleteCommentByRecipe" parameterType="int">
        UPDATE COMMENTS
		SET DELETE_YN='Y'
		WHERE RECIPE_NO = #{recipeNo}
    </update>
	
	<select id="getComment" parameterType="int" resultMap="comment">
		SELECT <include refid="commentColumns" />
		FROM COMMENTS
		WHERE COMMENT_NO = #{commentNo}
		AND DELETE_YN = 'N'
	</select>
	
	<insert id="replyComment" parameterType="commentDTO">
        <selectKey keyProperty="commentNo" resultType="int" order="BEFORE">
            SELECT SEQ_COMMENTS_NO.NEXTVAL FROM DUAL
        </selectKey>
		INSERT INTO COMMENTS (<include refid="commentColumns" />)
		VALUES(#{commentNo}, #{recipeNo}, #{writer}, #{content}, #{ref}, #{parentNo}, #{pos}+1, #{depth}, SYSDATE, 'N', 'N')
	</insert>
	
	<select id="getPosGap" parameterType="int" resultType="String">
		SELECT to_number(endPos) - to_number(startPos) gap
		FROM (SELECT pos startPos 
	   		  FROM ( SELECT * FROM COMMENTS WHERE PARENT_NO = #{parentNo} AND DEPTH = #{depth} ORDER BY POS)
	   		  WHERE ROWNUM = 1) s,
	  		 (SELECT pos endPos
	   		  FROM ( SELECT * FROM COMMENTS WHERE PARENT_NO = #{parentNo} AND DEPTH = #{depth} ORDER BY POS DESC)
	   		  WHERE ROWNUM = 1) e
	</select>
	
	<update id="updatePlusPos" parameterType="commentDTO">
		UPDATE COMMENTS
		SET POS = POS+1
		WHERE POS > #{pos}
		AND REF = #{ref}
		AND DELETE_YN='N'
    </update>
    
    <select id="getPos" parameterType="int" resultType="map">
    	SELECT count(*) countParentCount, NVL(MIN(POS),0) pos
		FROM COMMENTS
		WHERE PARENT_NO = #{parentNo}
		AND DEPTH = #{depth}
		AND DELETE_YN = 'N'
    </select>
    
	<select id="getCommentCnt" parameterType="int" resultType="int">
		SELECT NVL(count(*),0) commentCnt
		FROM COMMENTS
		WHERE RECIPE_NO = #{recipeNo}
		AND DELETE_YN = 'N'
	</select>
	
	<update id="updateComment" parameterType="commentDTO">
		UPDATE COMMENTS
		SET CONTENT = #{content}, UPDATE_YN='Y'
		WHERE COMMENT_NO = #{commentNo}
	</update>
	
	<select id="getIsRecommended" parameterType="recipeRecommendedDTO" resultMap="recipeRecommended">
		SELECT *
		FROM RECIPES_RECOMMENDED
		WHERE RECIPE_NO = #{recipeNo}
		AND USER_ID = #{userId}
	</select>
	
	<select id="getRecommendedCnt" parameterType="int" resultType="int">
		SELECT NVL(count(*),0) recommendedCount
		FROM RECIPES_RECOMMENDED
		WHERE RECIPE_NO = #{recipeNo}
	</select>
	
	<insert id="addRecommended" parameterType="recipeRecommendedDTO">
	 	<selectKey keyProperty="recipeRecommendedNo" resultType="int" order="BEFORE">
            SELECT SEQ_RECIPES_RECOMMENDED_NO.NEXTVAL FROM DUAL
        </selectKey>
		INSERT INTO RECIPES_RECOMMENDED (<include refid="recipeRecommendedColumns" />)
		VALUES(#{recipeRecommendedNo}, #{recipeNo}, #{userId})
	</insert>
	
	<delete id="removeRecommended" parameterType="recipeRecommendedDTO">
	 	DELETE FROM RECIPES_RECOMMENDED
		WHERE RECIPE_NO = #{recipeNo}
		AND USER_ID = #{userId}
	</delete>
	
</mapper>